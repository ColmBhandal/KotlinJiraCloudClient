/**
* The Jira Cloud platform REST API
* Jira Cloud platform REST API documentation
*
* The version of the OpenAPI document: 1001.0.0-SNAPSHOT
* Contact: ecosystem@atlassian.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.User

import com.squareup.moshi.Json
/**
 * Details about a project component.
 * @param self The URL of the component.
 * @param id The unique identifier for the component.
 * @param name The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters.
 * @param description The description for the component. Optional when creating or updating a component.
 * @param lead The user details for the component's lead user.
 * @param leadUserName This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.
 * @param leadAccountId The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
 * @param assigneeType The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:   *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.  *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.  *  `UNASSIGNED` an assignee is not set for issues created with this component.  *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.  Default value: `PROJECT_DEFAULT`.   Optional when creating or updating a component.
 * @param assignee The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component.
 * @param realAssigneeType The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:   *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.  *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.  *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.  *  `PROJECT_DEFAULT` when none of the preceding cases are true.
 * @param realAssignee The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee.
 * @param isAssigneeTypeValid Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned.
 * @param project The key of the project the component is assigned to. Required when creating a component. Can't be updated.
 * @param projectId The ID of the project the component is assigned to.
 */

data class Component (
    /* The URL of the component. */
    @Json(name = "self")
    val self: java.net.URI? = null,
    /* The unique identifier for the component. */
    @Json(name = "id")
    val id: kotlin.String? = null,
    /* The unique name for the component in the project. Required when creating a component. Optional when updating a component. The maximum length is 255 characters. */
    @Json(name = "name")
    val name: kotlin.String? = null,
    /* The description for the component. Optional when creating or updating a component. */
    @Json(name = "description")
    val description: kotlin.String? = null,
    /* The user details for the component's lead user. */
    @Json(name = "lead")
    val lead: User? = null,
    /* This property is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. */
    @Json(name = "leadUserName")
    val leadUserName: kotlin.String? = null,
    /* The accountId of the component's lead user. The accountId uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. */
    @Json(name = "leadAccountId")
    val leadAccountId: kotlin.String? = null,
    /* The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:   *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.  *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.  *  `UNASSIGNED` an assignee is not set for issues created with this component.  *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.  Default value: `PROJECT_DEFAULT`.   Optional when creating or updating a component. */
    @Json(name = "assigneeType")
    val assigneeType: Component.AssigneeType? = null,
    /* The details of the user associated with `assigneeType`, if any. See `realAssignee` for details of the user assigned to issues created with this component. */
    @Json(name = "assignee")
    val assignee: User? = null,
    /* The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:   *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.  *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.  *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.  *  `PROJECT_DEFAULT` when none of the preceding cases are true. */
    @Json(name = "realAssigneeType")
    val realAssigneeType: Component.RealAssigneeType? = null,
    /* The user assigned to issues created with this component, when `assigneeType` does not identify a valid assignee. */
    @Json(name = "realAssignee")
    val realAssignee: User? = null,
    /* Whether a user is associated with `assigneeType`. For example, if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead is not set, then `false` is returned. */
    @Json(name = "isAssigneeTypeValid")
    val isAssigneeTypeValid: kotlin.Boolean? = null,
    /* The key of the project the component is assigned to. Required when creating a component. Can't be updated. */
    @Json(name = "project")
    val project: kotlin.String? = null,
    /* The ID of the project the component is assigned to. */
    @Json(name = "projectId")
    val projectId: kotlin.Long? = null
) 


{
    /**
    * The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Can take the following values:   *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.  *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.  *  `UNASSIGNED` an assignee is not set for issues created with this component.  *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in.  Default value: `PROJECT_DEFAULT`.   Optional when creating or updating a component.
    * Values: pROJECTDEFAULT,cOMPONENTLEAD,pROJECTLEAD,uNASSIGNED
    */
    
    enum class AssigneeType(val value: kotlin.String){
        @Json(name = "PROJECT_DEFAULT") pROJECTDEFAULT("PROJECT_DEFAULT"),
        @Json(name = "COMPONENT_LEAD") cOMPONENTLEAD("COMPONENT_LEAD"),
        @Json(name = "PROJECT_LEAD") pROJECTLEAD("PROJECT_LEAD"),
        @Json(name = "UNASSIGNED") uNASSIGNED("UNASSIGNED");
    }
    /**
    * The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:   *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.  *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.  *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.  *  `PROJECT_DEFAULT` when none of the preceding cases are true.
    * Values: pROJECTDEFAULT,cOMPONENTLEAD,pROJECTLEAD,uNASSIGNED
    */
    
    enum class RealAssigneeType(val value: kotlin.String){
        @Json(name = "PROJECT_DEFAULT") pROJECTDEFAULT("PROJECT_DEFAULT"),
        @Json(name = "COMPONENT_LEAD") cOMPONENTLEAD("COMPONENT_LEAD"),
        @Json(name = "PROJECT_LEAD") pROJECTLEAD("PROJECT_LEAD"),
        @Json(name = "UNASSIGNED") uNASSIGNED("UNASSIGNED");
    }
}

