/**
* The Jira Cloud platform REST API
* Jira Cloud platform REST API documentation
*
* The version of the OpenAPI document: 1001.0.0-SNAPSHOT
* Contact: ecosystem@atlassian.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models


import com.squareup.moshi.Json
/**
 * The JQL specifying the issues available in the evaluated Jira expression under the `issues` context variable. Not all issues returned by the JQL query are loaded, only those described by the `startAt` and `maxResults` properties. To determine whether it is necessary to iterate to ensure all the issues returned by the JQL query are evaluated, inspect `meta.issues.jql.count` in the response.
 * @param query The JQL query.
 * @param startAt The index of the first issue to return from the JQL query.
 * @param maxResults The maximum number of issues to return from the JQL query. Inspect `meta.issues.jql.maxResults` in the response to ensure the maximum value has not been exceeded.
 * @param validation Determines how to validate the JQL query and treat the validation results.
 */

data class JexpJqlIssues (
    /* The JQL query. */
    @Json(name = "query")
    val query: kotlin.String? = null,
    /* The index of the first issue to return from the JQL query. */
    @Json(name = "startAt")
    val startAt: kotlin.Long? = null,
    /* The maximum number of issues to return from the JQL query. Inspect `meta.issues.jql.maxResults` in the response to ensure the maximum value has not been exceeded. */
    @Json(name = "maxResults")
    val maxResults: kotlin.Int? = null,
    /* Determines how to validate the JQL query and treat the validation results. */
    @Json(name = "validation")
    val validation: JexpJqlIssues.Validation? = null
) 


{
    /**
    * Determines how to validate the JQL query and treat the validation results.
    * Values: strict,warn,none
    */
    
    enum class Validation(val value: kotlin.String){
        @Json(name = "strict") strict("strict"),
        @Json(name = "warn") warn("warn"),
        @Json(name = "none") none("none");
    }
}

