/**
* The Jira Cloud platform REST API
* Jira Cloud platform REST API documentation
*
* The version of the OpenAPI document: 1001.0.0-SNAPSHOT
* Contact: ecosystem@atlassian.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.IssueTypeDetails
import org.openapitools.client.models.User

import com.squareup.moshi.Json
/**
 * Details about a workflow scheme.
 * @param id The ID of the workflow scheme.
 * @param name The name of the workflow scheme. The name must be unique. The maximum length is 255 characters. Required when creating a workflow scheme.
 * @param description The description of the workflow scheme.
 * @param defaultWorkflow The name of the default workflow for the workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira. If `defaultWorkflow` is not specified when creating a workflow scheme, it is set to *Jira Workflow (jira)*.
 * @param issueTypeMappings The issue type to workflow mappings, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.
 * @param originalDefaultWorkflow For draft workflow schemes, this property is the name of the default workflow for the original workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira.
 * @param originalIssueTypeMappings For draft workflow schemes, this property is the issue type to workflow mappings for the original workflow scheme, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme.
 * @param draft Whether the workflow scheme is a draft or not.
 * @param lastModifiedUser The user that last modified the draft workflow scheme. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.
 * @param lastModified The date-time that the draft workflow scheme was last modified. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows.
 * @param self 
 * @param updateDraftIfNeeded Whether to create or update a draft workflow scheme when updating an active workflow scheme. An active workflow scheme is a workflow scheme that is used by at least one project. The following examples show how this property works:   *  Update an active workflow scheme with `updateDraftIfNeeded` set to `true`: If a draft workflow scheme exists, it is updated. Otherwise, a draft workflow scheme is created.  *  Update an active workflow scheme with `updateDraftIfNeeded` set to `false`: An error is returned, as active workflow schemes cannot be updated.  *  Update an inactive workflow scheme with `updateDraftIfNeeded` set to `true`: The workflow scheme is updated, as inactive workflow schemes do not require drafts to update.  Defaults to `false`.
 * @param issueTypes The issue types available in Jira.
 */

data class WorkflowScheme (
    /* The ID of the workflow scheme. */
    @Json(name = "id")
    val id: kotlin.Long? = null,
    /* The name of the workflow scheme. The name must be unique. The maximum length is 255 characters. Required when creating a workflow scheme. */
    @Json(name = "name")
    val name: kotlin.String? = null,
    /* The description of the workflow scheme. */
    @Json(name = "description")
    val description: kotlin.String? = null,
    /* The name of the default workflow for the workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira. If `defaultWorkflow` is not specified when creating a workflow scheme, it is set to *Jira Workflow (jira)*. */
    @Json(name = "defaultWorkflow")
    val defaultWorkflow: kotlin.String? = null,
    /* The issue type to workflow mappings, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme. */
    @Json(name = "issueTypeMappings")
    val issueTypeMappings: kotlin.collections.Map<kotlin.String, kotlin.String>? = null,
    /* For draft workflow schemes, this property is the name of the default workflow for the original workflow scheme. The default workflow has *All Unassigned Issue Types* assigned to it in Jira. */
    @Json(name = "originalDefaultWorkflow")
    val originalDefaultWorkflow: kotlin.String? = null,
    /* For draft workflow schemes, this property is the issue type to workflow mappings for the original workflow scheme, where each mapping is an issue type ID and workflow name pair. Note that an issue type can only be mapped to one workflow in a workflow scheme. */
    @Json(name = "originalIssueTypeMappings")
    val originalIssueTypeMappings: kotlin.collections.Map<kotlin.String, kotlin.String>? = null,
    /* Whether the workflow scheme is a draft or not. */
    @Json(name = "draft")
    val draft: kotlin.Boolean? = null,
    /* The user that last modified the draft workflow scheme. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows. */
    @Json(name = "lastModifiedUser")
    val lastModifiedUser: User? = null,
    /* The date-time that the draft workflow scheme was last modified. A modification is a change to the issue type-project mappings only. This property does not apply to non-draft workflows. */
    @Json(name = "lastModified")
    val lastModified: kotlin.String? = null,
    @Json(name = "self")
    val self: java.net.URI? = null,
    /* Whether to create or update a draft workflow scheme when updating an active workflow scheme. An active workflow scheme is a workflow scheme that is used by at least one project. The following examples show how this property works:   *  Update an active workflow scheme with `updateDraftIfNeeded` set to `true`: If a draft workflow scheme exists, it is updated. Otherwise, a draft workflow scheme is created.  *  Update an active workflow scheme with `updateDraftIfNeeded` set to `false`: An error is returned, as active workflow schemes cannot be updated.  *  Update an inactive workflow scheme with `updateDraftIfNeeded` set to `true`: The workflow scheme is updated, as inactive workflow schemes do not require drafts to update.  Defaults to `false`. */
    @Json(name = "updateDraftIfNeeded")
    val updateDraftIfNeeded: kotlin.Boolean? = null,
    /* The issue types available in Jira. */
    @Json(name = "issueTypes")
    val issueTypes: kotlin.collections.Map<kotlin.String, IssueTypeDetails>? = null
) 



