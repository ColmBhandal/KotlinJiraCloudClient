/**
* The Jira Cloud platform REST API
* Jira Cloud platform REST API documentation
*
* The version of the OpenAPI document: 1001.0.0-SNAPSHOT
* Contact: ecosystem@atlassian.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models


import com.squareup.moshi.Json
/**
 * Details of an entity property.
 * @param entity The object on which the property is set.
 * @param key The key of the property.
 * @param path The path in the property value to query.
 * @param type The type of the property value extraction. Not available if the extraction for the property is not registered on the instance with the [Entity property](https://developer.atlassian.com/cloud/jira/platform/modules/entity-property/) module.
 */

data class JqlQueryFieldEntityProperty (
    /* The object on which the property is set. */
    @Json(name = "entity")
    val entity: kotlin.String,
    /* The key of the property. */
    @Json(name = "key")
    val key: kotlin.String,
    /* The path in the property value to query. */
    @Json(name = "path")
    val path: kotlin.String,
    /* The type of the property value extraction. Not available if the extraction for the property is not registered on the instance with the [Entity property](https://developer.atlassian.com/cloud/jira/platform/modules/entity-property/) module. */
    @Json(name = "type")
    val type: JqlQueryFieldEntityProperty.Type? = null
) 


{
    /**
    * The type of the property value extraction. Not available if the extraction for the property is not registered on the instance with the [Entity property](https://developer.atlassian.com/cloud/jira/platform/modules/entity-property/) module.
    * Values: number,string,text,date,user
    */
    
    enum class Type(val value: kotlin.String){
        @Json(name = "number") number("number"),
        @Json(name = "string") string("string"),
        @Json(name = "text") text("text"),
        @Json(name = "date") date("date"),
        @Json(name = "user") user("user");
    }
}

