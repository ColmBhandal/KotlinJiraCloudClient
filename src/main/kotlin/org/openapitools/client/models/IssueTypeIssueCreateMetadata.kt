/**
* The Jira Cloud platform REST API
* Jira Cloud platform REST API documentation
*
* The version of the OpenAPI document: 1001.0.0-SNAPSHOT
* Contact: ecosystem@atlassian.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.FieldMetadata
import org.openapitools.client.models.Scope

import com.squareup.moshi.Json
/**
 * Details of the issue creation metadata for an issue type.
 * @param self The URL of these issue type details.
 * @param id The ID of the issue type.
 * @param description The description of the issue type.
 * @param iconUrl The URL of the issue type's avatar.
 * @param name The name of the issue type.
 * @param subtask Whether this issue type is used to create subtasks.
 * @param avatarId The ID of the issue type's avatar.
 * @param entityId Unique ID for next-gen projects.
 * @param scope Details of the next-gen projects the issue type is available in.
 * @param expand Expand options that include additional issue type metadata details in the response.
 * @param fields List of the fields available when creating an issue for the issue type.
 */

data class IssueTypeIssueCreateMetadata (
    /* The URL of these issue type details. */
    @Json(name = "self")
    val self: kotlin.String? = null,
    /* The ID of the issue type. */
    @Json(name = "id")
    val id: kotlin.String? = null,
    /* The description of the issue type. */
    @Json(name = "description")
    val description: kotlin.String? = null,
    /* The URL of the issue type's avatar. */
    @Json(name = "iconUrl")
    val iconUrl: kotlin.String? = null,
    /* The name of the issue type. */
    @Json(name = "name")
    val name: kotlin.String? = null,
    /* Whether this issue type is used to create subtasks. */
    @Json(name = "subtask")
    val subtask: kotlin.Boolean? = null,
    /* The ID of the issue type's avatar. */
    @Json(name = "avatarId")
    val avatarId: kotlin.Long? = null,
    /* Unique ID for next-gen projects. */
    @Json(name = "entityId")
    val entityId: java.util.UUID? = null,
    /* Details of the next-gen projects the issue type is available in. */
    @Json(name = "scope")
    val scope: Scope? = null,
    /* Expand options that include additional issue type metadata details in the response. */
    @Json(name = "expand")
    val expand: kotlin.String? = null,
    /* List of the fields available when creating an issue for the issue type. */
    @Json(name = "fields")
    val fields: kotlin.collections.Map<kotlin.String, FieldMetadata>? = null
) 



