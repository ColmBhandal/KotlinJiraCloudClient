/**
* The Jira Cloud platform REST API
* Jira Cloud platform REST API documentation
*
* The version of the OpenAPI document: 1001.0.0-SNAPSHOT
* Contact: ecosystem@atlassian.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.FieldMetadata
import org.openapitools.client.models.StatusDetails

import com.squareup.moshi.Json
/**
 * Details of an issue transition.
 * @param id The ID of the issue transition. Required when specifying a transition to undertake.
 * @param name The name of the issue transition.
 * @param to Details of the issue status after the transition.
 * @param hasScreen Whether there is a screen associated with the issue transition.
 * @param isGlobal Whether the issue transition is global, that is, the transition is applied to issues regardless of their status.
 * @param isInitial Whether this is the initial issue transition for the workflow.
 * @param isAvailable Whether the transition is available to be performed.
 * @param isConditional Whether the issue has to meet criteria before the issue transition is applied.
 * @param fields Details of the fields associated with the issue transition screen. Use this information to populate `fields` and `update` in a transition request.
 * @param expand Expand options that include additional transition details in the response.
 */

data class IssueTransition (
    /* The ID of the issue transition. Required when specifying a transition to undertake. */
    @Json(name = "id")
    val id: kotlin.String? = null,
    /* The name of the issue transition. */
    @Json(name = "name")
    val name: kotlin.String? = null,
    /* Details of the issue status after the transition. */
    @Json(name = "to")
    val to: StatusDetails? = null,
    /* Whether there is a screen associated with the issue transition. */
    @Json(name = "hasScreen")
    val hasScreen: kotlin.Boolean? = null,
    /* Whether the issue transition is global, that is, the transition is applied to issues regardless of their status. */
    @Json(name = "isGlobal")
    val isGlobal: kotlin.Boolean? = null,
    /* Whether this is the initial issue transition for the workflow. */
    @Json(name = "isInitial")
    val isInitial: kotlin.Boolean? = null,
    /* Whether the transition is available to be performed. */
    @Json(name = "isAvailable")
    val isAvailable: kotlin.Boolean? = null,
    /* Whether the issue has to meet criteria before the issue transition is applied. */
    @Json(name = "isConditional")
    val isConditional: kotlin.Boolean? = null,
    /* Details of the fields associated with the issue transition screen. Use this information to populate `fields` and `update` in a transition request. */
    @Json(name = "fields")
    val fields: kotlin.collections.Map<kotlin.String, FieldMetadata>? = null,
    /* Expand options that include additional transition details in the response. */
    @Json(name = "expand")
    val expand: kotlin.String? = null
) 



