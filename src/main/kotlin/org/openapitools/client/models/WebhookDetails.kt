/**
* The Jira Cloud platform REST API
* Jira Cloud platform REST API documentation
*
* The version of the OpenAPI document: 1001.0.0-SNAPSHOT
* Contact: ecosystem@atlassian.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models


import com.squareup.moshi.Json
/**
 * A list of webhooks.
 * @param jqlFilter The JQL filter that specifies which issues the webhook is sent for. Only a subset of JQL can be used. The supported elements are:   *  Fields: `issueKey`, `project`, `issuetype`, `status`, `assignee`, `reporter`, `issue.property`, and `cf[id]` (for custom fields—only the epic label custom field is supported).  *  Operators: `=`, `!=`, `IN`, and `NOT IN`.
 * @param events The Jira events that trigger the webhook.
 */

data class WebhookDetails (
    /* The JQL filter that specifies which issues the webhook is sent for. Only a subset of JQL can be used. The supported elements are:   *  Fields: `issueKey`, `project`, `issuetype`, `status`, `assignee`, `reporter`, `issue.property`, and `cf[id]` (for custom fields—only the epic label custom field is supported).  *  Operators: `=`, `!=`, `IN`, and `NOT IN`. */
    @Json(name = "jqlFilter")
    val jqlFilter: kotlin.String,
    /* The Jira events that trigger the webhook. */
    @Json(name = "events")
    val events: kotlin.Array<WebhookDetails.Events>? = null
) 


{
    /**
    * The Jira events that trigger the webhook.
    * Values: jiraColonIssueCreated,jiraColonIssueUpdated,jiraColonIssueDeleted,commentCreated,commentUpdated,commentDeleted,issuePropertySet,issuePropertyDeleted
    */
    
    enum class Events(val value: kotlin.String){
        @Json(name = "jira:issue_created") jiraColonIssueCreated("jira:issue_created"),
        @Json(name = "jira:issue_updated") jiraColonIssueUpdated("jira:issue_updated"),
        @Json(name = "jira:issue_deleted") jiraColonIssueDeleted("jira:issue_deleted"),
        @Json(name = "comment_created") commentCreated("comment_created"),
        @Json(name = "comment_updated") commentUpdated("comment_updated"),
        @Json(name = "comment_deleted") commentDeleted("comment_deleted"),
        @Json(name = "issue_property_set") issuePropertySet("issue_property_set"),
        @Json(name = "issue_property_deleted") issuePropertyDeleted("issue_property_deleted");
    }
}

