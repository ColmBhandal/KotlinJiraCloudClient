/**
* The Jira Cloud platform REST API
* Jira Cloud platform REST API documentation
*
* The version of the OpenAPI document: 1001.0.0-SNAPSHOT
* Contact: ecosystem@atlassian.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models


import com.squareup.moshi.Json
/**
 * Details of a permission and its availability to a user.
 * @param id The ID of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.
 * @param key The key of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions.
 * @param name The name of the permission.
 * @param type The type of the permission.
 * @param description The description of the permission.
 * @param havePermission Whether the permission is available to the user in the queried context.
 * @param deprecatedKey Indicate whether the permission key is deprecated. Note that deprecated keys cannot be used in the `permissions parameter of Get my permissions. Deprecated keys are not returned by Get all permissions.`
 */

data class UserPermission (
    /* The ID of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions. */
    @Json(name = "id")
    val id: kotlin.String? = null,
    /* The key of the permission. Either `id` or `key` must be specified. Use [Get all permissions](#api-rest-api-3-permissions-get) to get the list of permissions. */
    @Json(name = "key")
    val key: kotlin.String? = null,
    /* The name of the permission. */
    @Json(name = "name")
    val name: kotlin.String? = null,
    /* The type of the permission. */
    @Json(name = "type")
    val type: UserPermission.Type? = null,
    /* The description of the permission. */
    @Json(name = "description")
    val description: kotlin.String? = null,
    /* Whether the permission is available to the user in the queried context. */
    @Json(name = "havePermission")
    val havePermission: kotlin.Boolean? = null,
    /* Indicate whether the permission key is deprecated. Note that deprecated keys cannot be used in the `permissions parameter of Get my permissions. Deprecated keys are not returned by Get all permissions.` */
    @Json(name = "deprecatedKey")
    val deprecatedKey: kotlin.Boolean? = null
) 


{
    /**
    * The type of the permission.
    * Values: gLOBAL,pROJECT
    */
    
    enum class Type(val value: kotlin.String){
        @Json(name = "GLOBAL") gLOBAL("GLOBAL"),
        @Json(name = "PROJECT") pROJECT("PROJECT");
    }
}

